#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nvvQLTMN_DAL_WS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNT")]
	public partial class QLNTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertKhoi(Khoi instance);
    partial void UpdateKhoi(Khoi instance);
    partial void DeleteKhoi(Khoi instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertPhuHuynh(PhuHuynh instance);
    partial void UpdatePhuHuynh(PhuHuynh instance);
    partial void DeletePhuHuynh(PhuHuynh instance);
    partial void InsertTinhTrangSucKhoe(TinhTrangSucKhoe instance);
    partial void UpdateTinhTrangSucKhoe(TinhTrangSucKhoe instance);
    partial void DeleteTinhTrangSucKhoe(TinhTrangSucKhoe instance);
    partial void InsertTre(Tre instance);
    partial void UpdateTre(Tre instance);
    partial void DeleteTre(Tre instance);
    partial void InsertTruong(Truong instance);
    partial void UpdateTruong(Truong instance);
    partial void DeleteTruong(Truong instance);
    #endregion
		
		public QLNTDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLNTConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<Khoi> Khois
		{
			get
			{
				return this.GetTable<Khoi>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<PhuHuynh> PhuHuynhs
		{
			get
			{
				return this.GetTable<PhuHuynh>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangSucKhoe> TinhTrangSucKhoes
		{
			get
			{
				return this.GetTable<TinhTrangSucKhoe>();
			}
		}
		
		public System.Data.Linq.Table<Tre> Tres
		{
			get
			{
				return this.GetTable<Tre>();
			}
		}
		
		public System.Data.Linq.Table<Truong> Truongs
		{
			get
			{
				return this.GetTable<Truong>();
			}
		}
	}
	
	[Table(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGiaoVien;
		
		private string _TenGiaoVien;
		
		private string _GioiTinh;
		
		private DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _BangCap;
		
		private string _MucLuong;
		
		private string _ChucVu;
		
		private int _MaLop;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(int value);
    partial void OnMaGiaoVienChanged();
    partial void OnTenGiaoVienChanging(string value);
    partial void OnTenGiaoVienChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnBangCapChanging(string value);
    partial void OnBangCapChanged();
    partial void OnMucLuongChanging(string value);
    partial void OnMucLuongChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnMaLopChanging(System.Nullable<int> value);
    partial void OnMaLopChanged();
    #endregion
		
		public GiaoVien()
		{
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[Column(Storage="_MaGiaoVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[Column(Storage="_TenGiaoVien", DbType="NVarChar(50)")]
		public string TenGiaoVien
		{
			get
			{
				return this._TenGiaoVien;
			}
			set
			{
				if ((this._TenGiaoVien != value))
				{
					this.OnTenGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._TenGiaoVien = value;
					this.SendPropertyChanged("TenGiaoVien");
					this.OnTenGiaoVienChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="DateTime")]
		public DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_BangCap", DbType="NVarChar(50)")]
		public string BangCap
		{
			get
			{
				return this._BangCap;
			}
			set
			{
				if ((this._BangCap != value))
				{
					this.OnBangCapChanging(value);
					this.SendPropertyChanging();
					this._BangCap = value;
					this.SendPropertyChanged("BangCap");
					this.OnBangCapChanged();
				}
			}
		}
		
		[Column(Storage="_MucLuong", DbType="NVarChar(50)")]
		public string MucLuong
		{
			get
			{
				return this._MucLuong;
			}
			set
			{
				if ((this._MucLuong != value))
				{
					this.OnMucLuongChanging(value);
					this.SendPropertyChanging();
					this._MucLuong = value;
					this.SendPropertyChanged("MucLuong");
					this.OnMucLuongChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[Column(Storage="_MaLop", DbType="Int")]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[Association(Name="Lop_GiaoVien", Storage="_Lop", ThisKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Khoi")]
	public partial class Khoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoi;
		
		private string _TenKhoi;
		
		private int _SoLop;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    partial void OnSoLopChanging(System.Nullable<int> value);
    partial void OnSoLopChanged();
    #endregion
		
		public Khoi()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[Column(Storage="_MaKhoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[Column(Storage="_TenKhoi", DbType="NChar(10)")]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[Column(Storage="_SoLop", DbType="Int")]
		public int SoLop
		{
			get
			{
				return this._SoLop;
			}
			set
			{
				if ((this._SoLop != value))
				{
					this.OnSoLopChanging(value);
					this.SendPropertyChanging();
					this._SoLop = value;
					this.SendPropertyChanged("SoLop");
					this.OnSoLopChanged();
				}
			}
		}
		
		[Association(Name="Khoi_Lop", Storage="_Lops", OtherKey="MaKhoi")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
	}
	
	[Table(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private string _TenLop;
		
		private string _DoTuoi;
		
		private int _SiSo;
		
		private int _MaKhoi;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<Tre> _Tres;
		
		private EntityRef<Khoi> _Khoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnDoTuoiChanging(string value);
    partial void OnDoTuoiChanged();
    partial void OnSiSoChanging(System.Nullable<int> value);
    partial void OnSiSoChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public Lop()
		{
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._Tres = new EntitySet<Tre>(new Action<Tre>(this.attach_Tres), new Action<Tre>(this.detach_Tres));
			this._Khoi = default(EntityRef<Khoi>);
			OnCreated();
		}
		
		[Column(Storage="_MaLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[Column(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[Column(Storage="_DoTuoi", DbType="NVarChar(50)")]
		public string DoTuoi
		{
			get
			{
				return this._DoTuoi;
			}
			set
			{
				if ((this._DoTuoi != value))
				{
					this.OnDoTuoiChanging(value);
					this.SendPropertyChanging();
					this._DoTuoi = value;
					this.SendPropertyChanged("DoTuoi");
					this.OnDoTuoiChanged();
				}
			}
		}
		
		[Column(Storage="_SiSo", DbType="Int")]
		public int SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[Column(Storage="_MaKhoi", DbType="Int")]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[Association(Name="Lop_GiaoVien", Storage="_GiaoViens", OtherKey="MaLop")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[Association(Name="Lop_Tre", Storage="_Tres", OtherKey="MaLop")]
		public EntitySet<Tre> Tres
		{
			get
			{
				return this._Tres;
			}
			set
			{
				this._Tres.Assign(value);
			}
		}
		
		[Association(Name="Khoi_Lop", Storage="_Khoi", ThisKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(int);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
		
		private void attach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[Table(Name="dbo.PhuHuynh")]
	public partial class PhuHuynh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhuHuynh;
		
		private string _TenCha;
		
		private string _NgheNhiepCha;
		
		private int _TuoiCha;
		
		private string _SdtCha;
		
		private string _DiaChiCoQuanCha;
		
		private string _TenMe;

        private string _NgheNghiepMe;
		
		private int _TuoiMe;
		
		private string _SdtMe;
		
		private string _DiaChiCoQuanMe;
		
		private EntitySet<Tre> _Tres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhuHuynhChanging(int value);
    partial void OnMaPhuHuynhChanged();
    partial void OnTenChaChanging(string value);
    partial void OnTenChaChanged();
    partial void OnNgheNhiepChaChanging(string value);
    partial void OnNgheNhiepChaChanged();
    partial void OnTuoiChaChanging(System.Nullable<int> value);
    partial void OnTuoiChaChanged();
    partial void OnSdtChaChanging(string value);
    partial void OnSdtChaChanged();
    partial void OnDiaChiCoQuanChaChanging(string value);
    partial void OnDiaChiCoQuanChaChanged();
    partial void OnTenMeChanging(string value);
    partial void OnTenMeChanged();
    partial void OnNgheNghiepMeChanging(string value);
    partial void OnNgheNghiepMeChanged();
    partial void OnTuoiMeChanging(System.Nullable<int> value);
    partial void OnTuoiMeChanged();
    partial void OnSdtMeChanging(string value);
    partial void OnSdtMeChanged();
    partial void OnDiaChiCoQuanMeChanging(string value);
    partial void OnDiaChiCoQuanMeChanged();
    #endregion
		
		public PhuHuynh()
		{
			this._Tres = new EntitySet<Tre>(new Action<Tre>(this.attach_Tres), new Action<Tre>(this.detach_Tres));
			OnCreated();
		}
		
		[Column(Storage="_MaPhuHuynh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhuHuynh
		{
			get
			{
				return this._MaPhuHuynh;
			}
			set
			{
				if ((this._MaPhuHuynh != value))
				{
					this.OnMaPhuHuynhChanging(value);
					this.SendPropertyChanging();
					this._MaPhuHuynh = value;
					this.SendPropertyChanged("MaPhuHuynh");
					this.OnMaPhuHuynhChanged();
				}
			}
		}
		
		[Column(Storage="_TenCha", DbType="NVarChar(50)")]
		public string TenCha
		{
			get
			{
				return this._TenCha;
			}
			set
			{
				if ((this._TenCha != value))
				{
					this.OnTenChaChanging(value);
					this.SendPropertyChanging();
					this._TenCha = value;
					this.SendPropertyChanged("TenCha");
					this.OnTenChaChanged();
				}
			}
		}
		
		[Column(Storage="_NgheNhiepCha", DbType="NVarChar(50)")]
		public string NgheNhiepCha
		{
			get
			{
				return this._NgheNhiepCha;
			}
			set
			{
				if ((this._NgheNhiepCha != value))
				{
					this.OnNgheNhiepChaChanging(value);
					this.SendPropertyChanging();
					this._NgheNhiepCha = value;
					this.SendPropertyChanged("NgheNhiepCha");
					this.OnNgheNhiepChaChanged();
				}
			}
		}
		
		[Column(Storage="_TuoiCha", DbType="Int")]
		public int TuoiCha
		{
			get
			{
				return this._TuoiCha;
			}
			set
			{
				if ((this._TuoiCha != value))
				{
					this.OnTuoiChaChanging(value);
					this.SendPropertyChanging();
					this._TuoiCha = value;
					this.SendPropertyChanged("TuoiCha");
					this.OnTuoiChaChanged();
				}
			}
		}
		
		[Column(Storage="_SdtCha", DbType="NVarChar(50)")]
		public string SdtCha
		{
			get
			{
				return this._SdtCha;
			}
			set
			{
				if ((this._SdtCha != value))
				{
					this.OnSdtChaChanging(value);
					this.SendPropertyChanging();
					this._SdtCha = value;
					this.SendPropertyChanged("SdtCha");
					this.OnSdtChaChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiCoQuanCha", DbType="NVarChar(50)")]
		public string DiaChiCoQuanCha
		{
			get
			{
				return this._DiaChiCoQuanCha;
			}
			set
			{
				if ((this._DiaChiCoQuanCha != value))
				{
					this.OnDiaChiCoQuanChaChanging(value);
					this.SendPropertyChanging();
					this._DiaChiCoQuanCha = value;
					this.SendPropertyChanged("DiaChiCoQuanCha");
					this.OnDiaChiCoQuanChaChanged();
				}
			}
		}
		
		[Column(Storage="_TenMe", DbType="NVarChar(50)")]
		public string TenMe
		{
			get
			{
				return this._TenMe;
			}
			set
			{
				if ((this._TenMe != value))
				{
					this.OnTenMeChanging(value);
					this.SendPropertyChanging();
					this._TenMe = value;
					this.SendPropertyChanged("TenMe");
					this.OnTenMeChanged();
				}
			}
		}
		
		[Column(Storage="_NgheNghiepMe", DbType="NVarChar(50)")]
		public string NgheNghiepMe
		{
			get
			{
				return this._NgheNghiepMe;
			}
			set
			{
				if ((this._NgheNghiepMe != value))
				{
					this.OnNgheNghiepMeChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiepMe = value;
					this.SendPropertyChanged("NgheNghiepMe");
					this.OnNgheNghiepMeChanged();
				}
			}
		}
		
		[Column(Storage="_TuoiMe", DbType="Int")]
		public int TuoiMe
		{
			get
			{
				return this._TuoiMe;
			}
			set
			{
				if ((this._TuoiMe != value))
				{
					this.OnTuoiMeChanging(value);
					this.SendPropertyChanging();
					this._TuoiMe = value;
					this.SendPropertyChanged("TuoiMe");
					this.OnTuoiMeChanged();
				}
			}
		}
		
		[Column(Storage="_SdtMe", DbType="NVarChar(50)")]
		public string SdtMe
		{
			get
			{
				return this._SdtMe;
			}
			set
			{
				if ((this._SdtMe != value))
				{
					this.OnSdtMeChanging(value);
					this.SendPropertyChanging();
					this._SdtMe = value;
					this.SendPropertyChanged("SdtMe");
					this.OnSdtMeChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiCoQuanMe", DbType="NVarChar(50)")]
		public string DiaChiCoQuanMe
		{
			get
			{
				return this._DiaChiCoQuanMe;
			}
			set
			{
				if ((this._DiaChiCoQuanMe != value))
				{
					this.OnDiaChiCoQuanMeChanging(value);
					this.SendPropertyChanging();
					this._DiaChiCoQuanMe = value;
					this.SendPropertyChanged("DiaChiCoQuanMe");
					this.OnDiaChiCoQuanMeChanged();
				}
			}
		}
		
		[Association(Name="PhuHuynh_Tre", Storage="_Tres", OtherKey="MaPhuHuynh")]
		public EntitySet<Tre> Tres
		{
			get
			{
				return this._Tres;
			}
			set
			{
				this._Tres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.PhuHuynh = this;
		}
		
		private void detach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.PhuHuynh = null;
		}
	}
	
	[Table(Name="dbo.TinhTrangSucKhoe")]
	public partial class TinhTrangSucKhoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangSucKhoe;
		
		private float _CanNang;
		
		private float _ChieuCao;
		
		private string _BenhDiTruyen;
		
		private string _DinhDuong;
		
		private string _DaNiemMac;
		
		private string _DuongHohap;
		
		private string _HeTimMach;
		
		private string _TaiMuiHong;
		
		private string _Mat;
		
		private string _RangHamMat;
		
		private string _TiemNgua;
		
		private EntitySet<Tre> _Tres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangSucKhoeChanging(int value);
    partial void OnMaTinhTrangSucKhoeChanged();
    partial void OnCanNangChanging(System.Nullable<float> value);
    partial void OnCanNangChanged();
    partial void OnChieuCaoChanging(System.Nullable<float> value);
    partial void OnChieuCaoChanged();
    partial void OnBenhDiTruyenChanging(string value);
    partial void OnBenhDiTruyenChanged();
    partial void OnDinhDuongChanging(string value);
    partial void OnDinhDuongChanged();
    partial void OnDaNiemMacChanging(string value);
    partial void OnDaNiemMacChanged();
    partial void OnDuongHohapChanging(string value);
    partial void OnDuongHohapChanged();
    partial void OnHeTimMachChanging(string value);
    partial void OnHeTimMachChanged();
    partial void OnTaiMuiHongChanging(string value);
    partial void OnTaiMuiHongChanged();
    partial void OnMatChanging(string value);
    partial void OnMatChanged();
    partial void OnRangHamMatChanging(string value);
    partial void OnRangHamMatChanged();
    partial void OnTiemNguaChanging(string value);
    partial void OnTiemNguaChanged();
    #endregion
		
		public TinhTrangSucKhoe()
		{
			this._Tres = new EntitySet<Tre>(new Action<Tre>(this.attach_Tres), new Action<Tre>(this.detach_Tres));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrangSucKhoe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrangSucKhoe
		{
			get
			{
				return this._MaTinhTrangSucKhoe;
			}
			set
			{
				if ((this._MaTinhTrangSucKhoe != value))
				{
					this.OnMaTinhTrangSucKhoeChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSucKhoe = value;
					this.SendPropertyChanged("MaTinhTrangSucKhoe");
					this.OnMaTinhTrangSucKhoeChanged();
				}
			}
		}
		
		[Column(Storage="_CanNang", DbType="Real")]
		public float CanNang
		{
			get
			{
				return this._CanNang;
			}
			set
			{
				if ((this._CanNang != value))
				{
					this.OnCanNangChanging(value);
					this.SendPropertyChanging();
					this._CanNang = value;
					this.SendPropertyChanged("CanNang");
					this.OnCanNangChanged();
				}
			}
		}
		
		[Column(Storage="_ChieuCao", DbType="Real")]
		public float ChieuCao
		{
			get
			{
				return this._ChieuCao;
			}
			set
			{
				if ((this._ChieuCao != value))
				{
					this.OnChieuCaoChanging(value);
					this.SendPropertyChanging();
					this._ChieuCao = value;
					this.SendPropertyChanged("ChieuCao");
					this.OnChieuCaoChanged();
				}
			}
		}
		
		[Column(Storage="_BenhDiTruyen", DbType="NVarChar(50)")]
		public string BenhDiTruyen
		{
			get
			{
				return this._BenhDiTruyen;
			}
			set
			{
				if ((this._BenhDiTruyen != value))
				{
					this.OnBenhDiTruyenChanging(value);
					this.SendPropertyChanging();
					this._BenhDiTruyen = value;
					this.SendPropertyChanged("BenhDiTruyen");
					this.OnBenhDiTruyenChanged();
				}
			}
		}
		
		[Column(Storage="_DinhDuong", DbType="NVarChar(50)")]
		public string DinhDuong
		{
			get
			{
				return this._DinhDuong;
			}
			set
			{
				if ((this._DinhDuong != value))
				{
					this.OnDinhDuongChanging(value);
					this.SendPropertyChanging();
					this._DinhDuong = value;
					this.SendPropertyChanged("DinhDuong");
					this.OnDinhDuongChanged();
				}
			}
		}
		
		[Column(Storage="_DaNiemMac", DbType="NVarChar(50)")]
		public string DaNiemMac
		{
			get
			{
				return this._DaNiemMac;
			}
			set
			{
				if ((this._DaNiemMac != value))
				{
					this.OnDaNiemMacChanging(value);
					this.SendPropertyChanging();
					this._DaNiemMac = value;
					this.SendPropertyChanged("DaNiemMac");
					this.OnDaNiemMacChanged();
				}
			}
		}
		
		[Column(Storage="_DuongHohap", DbType="NVarChar(50)")]
		public string DuongHohap
		{
			get
			{
				return this._DuongHohap;
			}
			set
			{
				if ((this._DuongHohap != value))
				{
					this.OnDuongHohapChanging(value);
					this.SendPropertyChanging();
					this._DuongHohap = value;
					this.SendPropertyChanged("DuongHohap");
					this.OnDuongHohapChanged();
				}
			}
		}
		
		[Column(Storage="_HeTimMach", DbType="NVarChar(50)")]
		public string HeTimMach
		{
			get
			{
				return this._HeTimMach;
			}
			set
			{
				if ((this._HeTimMach != value))
				{
					this.OnHeTimMachChanging(value);
					this.SendPropertyChanging();
					this._HeTimMach = value;
					this.SendPropertyChanged("HeTimMach");
					this.OnHeTimMachChanged();
				}
			}
		}
		
		[Column(Storage="_TaiMuiHong", DbType="NVarChar(50)")]
		public string TaiMuiHong
		{
			get
			{
				return this._TaiMuiHong;
			}
			set
			{
				if ((this._TaiMuiHong != value))
				{
					this.OnTaiMuiHongChanging(value);
					this.SendPropertyChanging();
					this._TaiMuiHong = value;
					this.SendPropertyChanged("TaiMuiHong");
					this.OnTaiMuiHongChanged();
				}
			}
		}
		
		[Column(Storage="_Mat", DbType="NVarChar(50)")]
		public string Mat
		{
			get
			{
				return this._Mat;
			}
			set
			{
				if ((this._Mat != value))
				{
					this.OnMatChanging(value);
					this.SendPropertyChanging();
					this._Mat = value;
					this.SendPropertyChanged("Mat");
					this.OnMatChanged();
				}
			}
		}
		
		[Column(Storage="_RangHamMat", DbType="NVarChar(50)")]
		public string RangHamMat
		{
			get
			{
				return this._RangHamMat;
			}
			set
			{
				if ((this._RangHamMat != value))
				{
					this.OnRangHamMatChanging(value);
					this.SendPropertyChanging();
					this._RangHamMat = value;
					this.SendPropertyChanged("RangHamMat");
					this.OnRangHamMatChanged();
				}
			}
		}
		
		[Column(Storage="_TiemNgua", DbType="NVarChar(50)")]
		public string TiemNgua
		{
			get
			{
				return this._TiemNgua;
			}
			set
			{
				if ((this._TiemNgua != value))
				{
					this.OnTiemNguaChanging(value);
					this.SendPropertyChanging();
					this._TiemNgua = value;
					this.SendPropertyChanged("TiemNgua");
					this.OnTiemNguaChanged();
				}
			}
		}
		
		[Association(Name="TinhTrangSucKhoe_Tre", Storage="_Tres", OtherKey="MaTinhTrangSucKhoe")]
		public EntitySet<Tre> Tres
		{
			get
			{
				return this._Tres;
			}
			set
			{
				this._Tres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSucKhoe = this;
		}
		
		private void detach_Tres(Tre entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSucKhoe = null;
		}
	}
	
	[Table(Name="dbo.Tre")]
	public partial class Tre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTre;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private DateTime _NgaySinh;
		
		private int _ConThu;
		
		private int _MaTinhTrangSucKhoe;
		
		private int _MaPhuHuynh;
		
		private int _MaLop;
		
		private EntityRef<Lop> _Lop;
		
		private EntityRef<PhuHuynh> _PhuHuynh;
		
		private EntityRef<TinhTrangSucKhoe> _TinhTrangSucKhoe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTreChanging(int value);
    partial void OnMaTreChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnConThuChanging(System.Nullable<int> value);
    partial void OnConThuChanged();
    partial void OnMaTinhTrangSucKhoeChanging(System.Nullable<int> value);
    partial void OnMaTinhTrangSucKhoeChanged();
    partial void OnMaPhuHuynhChanging(System.Nullable<int> value);
    partial void OnMaPhuHuynhChanged();
    partial void OnMaLopChanging(System.Nullable<int> value);
    partial void OnMaLopChanged();
    #endregion
		
		public Tre()
		{
			this._Lop = default(EntityRef<Lop>);
			this._PhuHuynh = default(EntityRef<PhuHuynh>);
			this._TinhTrangSucKhoe = default(EntityRef<TinhTrangSucKhoe>);
			OnCreated();
		}
		
		[Column(Storage="_MaTre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTre
		{
			get
			{
				return this._MaTre;
			}
			set
			{
				if ((this._MaTre != value))
				{
					this.OnMaTreChanging(value);
					this.SendPropertyChanging();
					this._MaTre = value;
					this.SendPropertyChanged("MaTre");
					this.OnMaTreChanged();
				}
			}
		}
		
		[Column(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="DateTime")]
		public DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_ConThu", DbType="Int")]
		public int ConThu
		{
			get
			{
				return this._ConThu;
			}
			set
			{
				if ((this._ConThu != value))
				{
					this.OnConThuChanging(value);
					this.SendPropertyChanging();
					this._ConThu = value;
					this.SendPropertyChanged("ConThu");
					this.OnConThuChanged();
				}
			}
		}
		
		[Column(Storage="_MaTinhTrangSucKhoe", DbType="Int")]
		public int MaTinhTrangSucKhoe
		{
			get
			{
				return this._MaTinhTrangSucKhoe;
			}
			set
			{
				if ((this._MaTinhTrangSucKhoe != value))
				{
					if (this._TinhTrangSucKhoe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhTrangSucKhoeChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSucKhoe = value;
					this.SendPropertyChanged("MaTinhTrangSucKhoe");
					this.OnMaTinhTrangSucKhoeChanged();
				}
			}
		}
		
		[Column(Storage="_MaPhuHuynh", DbType="Int")]
		public int MaPhuHuynh
		{
			get
			{
				return this._MaPhuHuynh;
			}
			set
			{
				if ((this._MaPhuHuynh != value))
				{
					if (this._PhuHuynh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhuHuynhChanging(value);
					this.SendPropertyChanging();
					this._MaPhuHuynh = value;
					this.SendPropertyChanged("MaPhuHuynh");
					this.OnMaPhuHuynhChanged();
				}
			}
		}
		
		[Column(Storage="_MaLop", DbType="Int")]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[Association(Name="Lop_Tre", Storage="_Lop", ThisKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.Tres.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.Tres.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		[Association(Name="PhuHuynh_Tre", Storage="_PhuHuynh", ThisKey="MaPhuHuynh", IsForeignKey=true)]
		public PhuHuynh PhuHuynh
		{
			get
			{
				return this._PhuHuynh.Entity;
			}
			set
			{
				PhuHuynh previousValue = this._PhuHuynh.Entity;
				if (((previousValue != value) 
							|| (this._PhuHuynh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhuHuynh.Entity = null;
						previousValue.Tres.Remove(this);
					}
					this._PhuHuynh.Entity = value;
					if ((value != null))
					{
						value.Tres.Add(this);
						this._MaPhuHuynh = value.MaPhuHuynh;
					}
					else
					{
						this._MaPhuHuynh = default(int);
					}
					this.SendPropertyChanged("PhuHuynh");
				}
			}
		}
		
		[Association(Name="TinhTrangSucKhoe_Tre", Storage="_TinhTrangSucKhoe", ThisKey="MaTinhTrangSucKhoe", IsForeignKey=true)]
		public TinhTrangSucKhoe TinhTrangSucKhoe
		{
			get
			{
				return this._TinhTrangSucKhoe.Entity;
			}
			set
			{
				TinhTrangSucKhoe previousValue = this._TinhTrangSucKhoe.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangSucKhoe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangSucKhoe.Entity = null;
						previousValue.Tres.Remove(this);
					}
					this._TinhTrangSucKhoe.Entity = value;
					if ((value != null))
					{
						value.Tres.Add(this);
						this._MaTinhTrangSucKhoe = value.MaTinhTrangSucKhoe;
					}
					else
					{
						this._MaTinhTrangSucKhoe = default(int);
					}
					this.SendPropertyChanged("TinhTrangSucKhoe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Truong")]
	public partial class Truong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTruong;
		
		private string _TenTruong;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTruongChanging(int value);
    partial void OnMaTruongChanged();
    partial void OnTenTruongChanging(string value);
    partial void OnTenTruongChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public Truong()
		{
			OnCreated();
		}
		
		[Column(Storage="_MaTruong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTruong
		{
			get
			{
				return this._MaTruong;
			}
			set
			{
				if ((this._MaTruong != value))
				{
					this.OnMaTruongChanging(value);
					this.SendPropertyChanging();
					this._MaTruong = value;
					this.SendPropertyChanged("MaTruong");
					this.OnMaTruongChanged();
				}
			}
		}
		
		[Column(Storage="_TenTruong", DbType="NVarChar(50)")]
		public string TenTruong
		{
			get
			{
				return this._TenTruong;
			}
			set
			{
				if ((this._TenTruong != value))
				{
					this.OnTenTruongChanging(value);
					this.SendPropertyChanging();
					this._TenTruong = value;
					this.SendPropertyChanged("TenTruong");
					this.OnTenTruongChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
