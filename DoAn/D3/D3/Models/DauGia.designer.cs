#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace D3.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="DauGia")]
	public partial class DauGiaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDauGia(ChiTietDauGia instance);
    partial void UpdateChiTietDauGia(ChiTietDauGia instance);
    partial void DeleteChiTietDauGia(ChiTietDauGia instance);
    partial void InsertChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void UpdateChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void DeleteChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertDauGiaThanhCong(DauGiaThanhCong instance);
    partial void UpdateDauGiaThanhCong(DauGiaThanhCong instance);
    partial void DeleteDauGiaThanhCong(DauGiaThanhCong instance);
    partial void InsertGiaoDien(GiaoDien instance);
    partial void UpdateGiaoDien(GiaoDien instance);
    partial void DeleteGiaoDien(GiaoDien instance);
    partial void InsertLoaiMultimedia(LoaiMultimedia instance);
    partial void UpdateLoaiMultimedia(LoaiMultimedia instance);
    partial void DeleteLoaiMultimedia(LoaiMultimedia instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void UpdateLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void DeleteLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void InsertMultimedia(Multimedia instance);
    partial void UpdateMultimedia(Multimedia instance);
    partial void DeleteMultimedia(Multimedia instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertSanPham_Multimedia(SanPham_Multimedia instance);
    partial void UpdateSanPham_Multimedia(SanPham_Multimedia instance);
    partial void DeleteSanPham_Multimedia(SanPham_Multimedia instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTHAMSO(THAMSO instance);
    partial void UpdateTHAMSO(THAMSO instance);
    partial void DeleteTHAMSO(THAMSO instance);
    partial void InsertThongTinTaiKhoan(ThongTinTaiKhoan instance);
    partial void UpdateThongTinTaiKhoan(ThongTinTaiKhoan instance);
    partial void DeleteThongTinTaiKhoan(ThongTinTaiKhoan instance);
    partial void InsertTinhTrangSanPham(TinhTrangSanPham instance);
    partial void UpdateTinhTrangSanPham(TinhTrangSanPham instance);
    partial void DeleteTinhTrangSanPham(TinhTrangSanPham instance);
    #endregion
		
		public DauGiaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DauGiaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DauGiaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DauGiaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DauGiaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DauGiaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this.GetTable<ChiTietDauGia>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this.GetTable<ChiTietPhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<DauGiaThanhCong> DauGiaThanhCongs
		{
			get
			{
				return this.GetTable<DauGiaThanhCong>();
			}
		}
		
		public System.Data.Linq.Table<GiaoDien> GiaoDiens
		{
			get
			{
				return this.GetTable<GiaoDien>();
			}
		}
		
		public System.Data.Linq.Table<LoaiMultimedia> LoaiMultimedias
		{
			get
			{
				return this.GetTable<LoaiMultimedia>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiKhoan> LoaiTaiKhoans
		{
			get
			{
				return this.GetTable<LoaiTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<Multimedia> Multimedias
		{
			get
			{
				return this.GetTable<Multimedia>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this.GetTable<SanPham_Multimedia>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinTaiKhoan> ThongTinTaiKhoans
		{
			get
			{
				return this.GetTable<ThongTinTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangSanPham> TinhTrangSanPhams
		{
			get
			{
				return this.GetTable<TinhTrangSanPham>();
			}
		}
	}
	
	[Table(Name="dbo.ChiTietDauGia")]
	public partial class ChiTietDauGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChiTietDauGia;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private System.Nullable<int> _GiaGiaoDich;
		
		private System.Nullable<System.DateTime> _ThoiGianGiaoDich;
		
		private string _TinhTrang;
		
		private string _MaSanPham;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietDauGiaChanging(string value);
    partial void OnMaChiTietDauGiaChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnGiaGiaoDichChanging(System.Nullable<int> value);
    partial void OnGiaGiaoDichChanged();
    partial void OnThoiGianGiaoDichChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianGiaoDichChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    #endregion
		
		public ChiTietDauGia()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaChiTietDauGia", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChiTietDauGia
		{
			get
			{
				return this._MaChiTietDauGia;
			}
			set
			{
				if ((this._MaChiTietDauGia != value))
				{
					this.OnMaChiTietDauGiaChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDauGia = value;
					this.SendPropertyChanged("MaChiTietDauGia");
					this.OnMaChiTietDauGiaChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_GiaGiaoDich", DbType="Int")]
		public System.Nullable<int> GiaGiaoDich
		{
			get
			{
				return this._GiaGiaoDich;
			}
			set
			{
				if ((this._GiaGiaoDich != value))
				{
					this.OnGiaGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._GiaGiaoDich = value;
					this.SendPropertyChanged("GiaGiaoDich");
					this.OnGiaGiaoDichChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianGiaoDich", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianGiaoDich
		{
			get
			{
				return this._ThoiGianGiaoDich;
			}
			set
			{
				if ((this._ThoiGianGiaoDich != value))
				{
					this.OnThoiGianGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianGiaoDich = value;
					this.SendPropertyChanged("ThoiGianGiaoDich");
					this.OnThoiGianGiaoDichChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_MaSanPham", DbType="VarChar(10)")]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[Association(Name="SanPham_ChiTietDauGia", Storage="_SanPham", ThisKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDauGias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDauGias.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[Association(Name="TaiKhoan_ChiTietDauGia", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ChiTietDauGias.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChiTietDauGias.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ChiTietPhanQuyen")]
	public partial class ChiTietPhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietPhanQuyen;
		
		private string _MaLoaiTaiKhoan;
		
		private System.Nullable<int> _MaPhanQuyen;
		
		private EntityRef<LoaiTaiKhoan> _LoaiTaiKhoan;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietPhanQuyenChanging(int value);
    partial void OnMaChiTietPhanQuyenChanged();
    partial void OnMaLoaiTaiKhoanChanging(string value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnMaPhanQuyenChanging(System.Nullable<int> value);
    partial void OnMaPhanQuyenChanged();
    #endregion
		
		public ChiTietPhanQuyen()
		{
			this._LoaiTaiKhoan = default(EntityRef<LoaiTaiKhoan>);
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[Column(Storage="_MaChiTietPhanQuyen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaChiTietPhanQuyen
		{
			get
			{
				return this._MaChiTietPhanQuyen;
			}
			set
			{
				if ((this._MaChiTietPhanQuyen != value))
				{
					this.OnMaChiTietPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietPhanQuyen = value;
					this.SendPropertyChanged("MaChiTietPhanQuyen");
					this.OnMaChiTietPhanQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiTaiKhoan", DbType="VarChar(10)")]
		public string MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					if (this._LoaiTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_MaPhanQuyen", DbType="Int")]
		public System.Nullable<int> MaPhanQuyen
		{
			get
			{
				return this._MaPhanQuyen;
			}
			set
			{
				if ((this._MaPhanQuyen != value))
				{
					if (this._PhanQuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaPhanQuyen = value;
					this.SendPropertyChanged("MaPhanQuyen");
					this.OnMaPhanQuyenChanged();
				}
			}
		}
		
		[Association(Name="LoaiTaiKhoan_ChiTietPhanQuyen", Storage="_LoaiTaiKhoan", ThisKey="MaLoaiTaiKhoan", IsForeignKey=true)]
		public LoaiTaiKhoan LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan.Entity;
			}
			set
			{
				LoaiTaiKhoan previousValue = this._LoaiTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiKhoan.Entity = null;
						previousValue.ChiTietPhanQuyens.Remove(this);
					}
					this._LoaiTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhanQuyens.Add(this);
						this._MaLoaiTaiKhoan = value.MaLoaiTaiKhoan;
					}
					else
					{
						this._MaLoaiTaiKhoan = default(string);
					}
					this.SendPropertyChanged("LoaiTaiKhoan");
				}
			}
		}
		
		[Association(Name="PhanQuyen_ChiTietPhanQuyen", Storage="_PhanQuyen", ThisKey="MaPhanQuyen", IsForeignKey=true)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.ChiTietPhanQuyens.Remove(this);
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhanQuyens.Add(this);
						this._MaPhanQuyen = value.MaPhanQuyen;
					}
					else
					{
						this._MaPhanQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaComment;
		
		private string _NoiDungComment;
		
		private System.Nullable<System.DateTime> _NgayComment;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private string _MaSanPham;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCommentChanging(int value);
    partial void OnMaCommentChanged();
    partial void OnNoiDungCommentChanging(string value);
    partial void OnNoiDungCommentChanged();
    partial void OnNgayCommentChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCommentChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    #endregion
		
		public Comment()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaComment", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaComment
		{
			get
			{
				return this._MaComment;
			}
			set
			{
				if ((this._MaComment != value))
				{
					this.OnMaCommentChanging(value);
					this.SendPropertyChanging();
					this._MaComment = value;
					this.SendPropertyChanged("MaComment");
					this.OnMaCommentChanged();
				}
			}
		}
		
		[Column(Storage="_NoiDungComment", DbType="NVarChar(500)")]
		public string NoiDungComment
		{
			get
			{
				return this._NoiDungComment;
			}
			set
			{
				if ((this._NoiDungComment != value))
				{
					this.OnNoiDungCommentChanging(value);
					this.SendPropertyChanging();
					this._NoiDungComment = value;
					this.SendPropertyChanged("NoiDungComment");
					this.OnNoiDungCommentChanged();
				}
			}
		}
		
		[Column(Storage="_NgayComment", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayComment
		{
			get
			{
				return this._NgayComment;
			}
			set
			{
				if ((this._NgayComment != value))
				{
					this.OnNgayCommentChanging(value);
					this.SendPropertyChanging();
					this._NgayComment = value;
					this.SendPropertyChanged("NgayComment");
					this.OnNgayCommentChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_MaSanPham", DbType="VarChar(10)")]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[Association(Name="SanPham_Comment", Storage="_SanPham", ThisKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[Association(Name="TaiKhoan_Comment", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DauGiaThanhCong")]
	public partial class DauGiaThanhCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDauGiaThanhCong;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private System.Nullable<int> _GiaKhopLenh;
		
		private string _MaChiTietGiaoDich;
		
		private string _Comment;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDauGiaThanhCongChanging(string value);
    partial void OnMaDauGiaThanhCongChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnGiaKhopLenhChanging(System.Nullable<int> value);
    partial void OnGiaKhopLenhChanged();
    partial void OnMaChiTietGiaoDichChanging(string value);
    partial void OnMaChiTietGiaoDichChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public DauGiaThanhCong()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaDauGiaThanhCong", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDauGiaThanhCong
		{
			get
			{
				return this._MaDauGiaThanhCong;
			}
			set
			{
				if ((this._MaDauGiaThanhCong != value))
				{
					this.OnMaDauGiaThanhCongChanging(value);
					this.SendPropertyChanging();
					this._MaDauGiaThanhCong = value;
					this.SendPropertyChanged("MaDauGiaThanhCong");
					this.OnMaDauGiaThanhCongChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_GiaKhopLenh", DbType="Int")]
		public System.Nullable<int> GiaKhopLenh
		{
			get
			{
				return this._GiaKhopLenh;
			}
			set
			{
				if ((this._GiaKhopLenh != value))
				{
					this.OnGiaKhopLenhChanging(value);
					this.SendPropertyChanging();
					this._GiaKhopLenh = value;
					this.SendPropertyChanged("GiaKhopLenh");
					this.OnGiaKhopLenhChanged();
				}
			}
		}
		
		[Column(Storage="_MaChiTietGiaoDich", DbType="VarChar(10)")]
		public string MaChiTietGiaoDich
		{
			get
			{
				return this._MaChiTietGiaoDich;
			}
			set
			{
				if ((this._MaChiTietGiaoDich != value))
				{
					this.OnMaChiTietGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietGiaoDich = value;
					this.SendPropertyChanged("MaChiTietGiaoDich");
					this.OnMaChiTietGiaoDichChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Association(Name="TaiKhoan_DauGiaThanhCong", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DauGiaThanhCongs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DauGiaThanhCongs.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GiaoDien")]
	public partial class GiaoDien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoDien;
		
		private string _TenTheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoDienChanging(string value);
    partial void OnMaGiaoDienChanged();
    partial void OnTenThemeChanging(string value);
    partial void OnTenThemeChanged();
    #endregion
		
		public GiaoDien()
		{
			OnCreated();
		}
		
		[Column(Storage="_MaGiaoDien", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoDien
		{
			get
			{
				return this._MaGiaoDien;
			}
			set
			{
				if ((this._MaGiaoDien != value))
				{
					this.OnMaGiaoDienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoDien = value;
					this.SendPropertyChanged("MaGiaoDien");
					this.OnMaGiaoDienChanged();
				}
			}
		}
		
		[Column(Storage="_TenTheme", DbType="NVarChar(50)")]
		public string TenTheme
		{
			get
			{
				return this._TenTheme;
			}
			set
			{
				if ((this._TenTheme != value))
				{
					this.OnTenThemeChanging(value);
					this.SendPropertyChanging();
					this._TenTheme = value;
					this.SendPropertyChanged("TenTheme");
					this.OnTenThemeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LoaiMultimedia")]
	public partial class LoaiMultimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiMT;
		
		private string _TenLoaiMT;
		
		private EntitySet<Multimedia> _Multimedias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiMTChanging(int value);
    partial void OnMaLoaiMTChanged();
    partial void OnTenLoaiMTChanging(string value);
    partial void OnTenLoaiMTChanged();
    #endregion
		
		public LoaiMultimedia()
		{
			this._Multimedias = new EntitySet<Multimedia>(new Action<Multimedia>(this.attach_Multimedias), new Action<Multimedia>(this.detach_Multimedias));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiMT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoaiMT
		{
			get
			{
				return this._MaLoaiMT;
			}
			set
			{
				if ((this._MaLoaiMT != value))
				{
					this.OnMaLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMT = value;
					this.SendPropertyChanged("MaLoaiMT");
					this.OnMaLoaiMTChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiMT", DbType="NVarChar(50)")]
		public string TenLoaiMT
		{
			get
			{
				return this._TenLoaiMT;
			}
			set
			{
				if ((this._TenLoaiMT != value))
				{
					this.OnTenLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiMT = value;
					this.SendPropertyChanged("TenLoaiMT");
					this.OnTenLoaiMTChanged();
				}
			}
		}
		
		[Association(Name="LoaiMultimedia_Multimedia", Storage="_Multimedias", OtherKey="MaLoaiMT")]
		public EntitySet<Multimedia> Multimedias
		{
			get
			{
				return this._Multimedias;
			}
			set
			{
				this._Multimedias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Multimedias(Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMultimedia = this;
		}
		
		private void detach_Multimedias(Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMultimedia = null;
		}
	}
	
	[Table(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSanPham;
		
		private string _TenLoaiSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSanPhamChanging(string value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnTenLoaiSanPhamChanging(string value);
    partial void OnTenLoaiSanPhamChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiSanPham", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiSanPham", DbType="NVarChar(50)")]
		public string TenLoaiSanPham
		{
			get
			{
				return this._TenLoaiSanPham;
			}
			set
			{
				if ((this._TenLoaiSanPham != value))
				{
					this.OnTenLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSanPham = value;
					this.SendPropertyChanged("TenLoaiSanPham");
					this.OnTenLoaiSanPhamChanged();
				}
			}
		}
		
		[Association(Name="LoaiSanPham_SanPham", Storage="_SanPhams", OtherKey="MaLoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[Table(Name="dbo.LoaiTaiKhoan")]
	public partial class LoaiTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiTaiKhoan;
		
		private string _TenLoaiTaiKhoan;
		
		private EntitySet<ChiTietPhanQuyen> _ChiTietPhanQuyens;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiTaiKhoanChanging(string value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnTenLoaiTaiKhoanChanging(string value);
    partial void OnTenLoaiTaiKhoanChanged();
    #endregion
		
		public LoaiTaiKhoan()
		{
			this._ChiTietPhanQuyens = new EntitySet<ChiTietPhanQuyen>(new Action<ChiTietPhanQuyen>(this.attach_ChiTietPhanQuyens), new Action<ChiTietPhanQuyen>(this.detach_ChiTietPhanQuyens));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiTaiKhoan", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiTaiKhoan", DbType="NVarChar(50)")]
		public string TenLoaiTaiKhoan
		{
			get
			{
				return this._TenLoaiTaiKhoan;
			}
			set
			{
				if ((this._TenLoaiTaiKhoan != value))
				{
					this.OnTenLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTaiKhoan = value;
					this.SendPropertyChanged("TenLoaiTaiKhoan");
					this.OnTenLoaiTaiKhoanChanged();
				}
			}
		}
		
		[Association(Name="LoaiTaiKhoan_ChiTietPhanQuyen", Storage="_ChiTietPhanQuyens", OtherKey="MaLoaiTaiKhoan")]
		public EntitySet<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this._ChiTietPhanQuyens;
			}
			set
			{
				this._ChiTietPhanQuyens.Assign(value);
			}
		}
		
		[Association(Name="LoaiTaiKhoan_TaiKhoan", Storage="_TaiKhoans", OtherKey="MaLoaiTaiKhoan")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = this;
		}
		
		private void detach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = null;
		}
	}
	
	[Table(Name="dbo.Multimedia")]
	public partial class Multimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMT;
		
		private string _TenMT;
		
		private System.Nullable<int> _MaLoaiMT;
		
		private System.Nullable<double> _DungLuong;
		
		private System.Nullable<double> _KichThuoc;
		
		private string _LinkURL;
		
		private EntitySet<SanPham_Multimedia> _SanPham_Multimedias;
		
		private EntityRef<LoaiMultimedia> _LoaiMultimedia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMTChanging(int value);
    partial void OnMaMTChanged();
    partial void OnTenMTChanging(string value);
    partial void OnTenMTChanged();
    partial void OnMaLoaiMTChanging(System.Nullable<int> value);
    partial void OnMaLoaiMTChanged();
    partial void OnDungLuongChanging(System.Nullable<double> value);
    partial void OnDungLuongChanged();
    partial void OnKichThuocChanging(System.Nullable<double> value);
    partial void OnKichThuocChanged();
    partial void OnLinkURLChanging(string value);
    partial void OnLinkURLChanged();
    #endregion
		
		public Multimedia()
		{
			this._SanPham_Multimedias = new EntitySet<SanPham_Multimedia>(new Action<SanPham_Multimedia>(this.attach_SanPham_Multimedias), new Action<SanPham_Multimedia>(this.detach_SanPham_Multimedias));
			this._LoaiMultimedia = default(EntityRef<LoaiMultimedia>);
			OnCreated();
		}
		
		[Column(Storage="_MaMT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMT
		{
			get
			{
				return this._MaMT;
			}
			set
			{
				if ((this._MaMT != value))
				{
					this.OnMaMTChanging(value);
					this.SendPropertyChanging();
					this._MaMT = value;
					this.SendPropertyChanged("MaMT");
					this.OnMaMTChanged();
				}
			}
		}
		
		[Column(Storage="_TenMT", DbType="NVarChar(50)")]
		public string TenMT
		{
			get
			{
				return this._TenMT;
			}
			set
			{
				if ((this._TenMT != value))
				{
					this.OnTenMTChanging(value);
					this.SendPropertyChanging();
					this._TenMT = value;
					this.SendPropertyChanged("TenMT");
					this.OnTenMTChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiMT", DbType="Int")]
		public System.Nullable<int> MaLoaiMT
		{
			get
			{
				return this._MaLoaiMT;
			}
			set
			{
				if ((this._MaLoaiMT != value))
				{
					if (this._LoaiMultimedia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMT = value;
					this.SendPropertyChanged("MaLoaiMT");
					this.OnMaLoaiMTChanged();
				}
			}
		}
		
		[Column(Storage="_DungLuong", DbType="Float")]
		public System.Nullable<double> DungLuong
		{
			get
			{
				return this._DungLuong;
			}
			set
			{
				if ((this._DungLuong != value))
				{
					this.OnDungLuongChanging(value);
					this.SendPropertyChanging();
					this._DungLuong = value;
					this.SendPropertyChanged("DungLuong");
					this.OnDungLuongChanged();
				}
			}
		}
		
		[Column(Storage="_KichThuoc", DbType="Float")]
		public System.Nullable<double> KichThuoc
		{
			get
			{
				return this._KichThuoc;
			}
			set
			{
				if ((this._KichThuoc != value))
				{
					this.OnKichThuocChanging(value);
					this.SendPropertyChanging();
					this._KichThuoc = value;
					this.SendPropertyChanged("KichThuoc");
					this.OnKichThuocChanged();
				}
			}
		}
		
		[Column(Storage="_LinkURL", DbType="NVarChar(50)")]
		public string LinkURL
		{
			get
			{
				return this._LinkURL;
			}
			set
			{
				if ((this._LinkURL != value))
				{
					this.OnLinkURLChanging(value);
					this.SendPropertyChanging();
					this._LinkURL = value;
					this.SendPropertyChanged("LinkURL");
					this.OnLinkURLChanged();
				}
			}
		}
		
		[Association(Name="Multimedia_SanPham_Multimedia", Storage="_SanPham_Multimedias", OtherKey="MaMT")]
		public EntitySet<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this._SanPham_Multimedias;
			}
			set
			{
				this._SanPham_Multimedias.Assign(value);
			}
		}
		
		[Association(Name="LoaiMultimedia_Multimedia", Storage="_LoaiMultimedia", ThisKey="MaLoaiMT", IsForeignKey=true)]
		public LoaiMultimedia LoaiMultimedia
		{
			get
			{
				return this._LoaiMultimedia.Entity;
			}
			set
			{
				LoaiMultimedia previousValue = this._LoaiMultimedia.Entity;
				if (((previousValue != value) 
							|| (this._LoaiMultimedia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiMultimedia.Entity = null;
						previousValue.Multimedias.Remove(this);
					}
					this._LoaiMultimedia.Entity = value;
					if ((value != null))
					{
						value.Multimedias.Add(this);
						this._MaLoaiMT = value.MaLoaiMT;
					}
					else
					{
						this._MaLoaiMT = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiMultimedia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = this;
		}
		
		private void detach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = null;
		}
	}
	
	[Table(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhanQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<ChiTietPhanQuyen> _ChiTietPhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanQuyenChanging(int value);
    partial void OnMaPhanQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ChiTietPhanQuyens = new EntitySet<ChiTietPhanQuyen>(new Action<ChiTietPhanQuyen>(this.attach_ChiTietPhanQuyens), new Action<ChiTietPhanQuyen>(this.detach_ChiTietPhanQuyens));
			OnCreated();
		}
		
		[Column(Storage="_MaPhanQuyen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhanQuyen
		{
			get
			{
				return this._MaPhanQuyen;
			}
			set
			{
				if ((this._MaPhanQuyen != value))
				{
					this.OnMaPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaPhanQuyen = value;
					this.SendPropertyChanged("MaPhanQuyen");
					this.OnMaPhanQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[Association(Name="PhanQuyen_ChiTietPhanQuyen", Storage="_ChiTietPhanQuyens", OtherKey="MaPhanQuyen")]
		public EntitySet<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this._ChiTietPhanQuyens;
			}
			set
			{
				this._ChiTietPhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = this;
		}
		
		private void detach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = null;
		}
	}
	
	[Table(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private string _MaLoaiSanPham;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private string _GiaKhoiDiem;
		
		private string _GiaHienTai;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private System.Nullable<int> _MaTinhTrangSanPham;
		
		private string _MoTaSanPham;
		
		private EntitySet<ChiTietDauGia> _ChiTietDauGias;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<SanPham_Multimedia> _SanPham_Multimedias;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<TinhTrangSanPham> _TinhTrangSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnMaLoaiSanPhamChanging(string value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnGiaKhoiDiemChanging(string value);
    partial void OnGiaKhoiDiemChanged();
    partial void OnGiaHienTaiChanging(string value);
    partial void OnGiaHienTaiChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnMaTinhTrangSanPhamChanging(System.Nullable<int> value);
    partial void OnMaTinhTrangSanPhamChanged();
    partial void OnMoTaSanPhamChanging(string value);
    partial void OnMoTaSanPhamChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDauGias = new EntitySet<ChiTietDauGia>(new Action<ChiTietDauGia>(this.attach_ChiTietDauGias), new Action<ChiTietDauGia>(this.detach_ChiTietDauGias));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._SanPham_Multimedias = new EntitySet<SanPham_Multimedia>(new Action<SanPham_Multimedia>(this.attach_SanPham_Multimedias), new Action<SanPham_Multimedia>(this.detach_SanPham_Multimedias));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._TinhTrangSanPham = default(EntityRef<TinhTrangSanPham>);
			OnCreated();
		}
		
		[Column(Storage="_MaSanPham", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_TenSanPham", DbType="NVarChar(50)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiSanPham", DbType="VarChar(10)")]
		public string MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_GiaKhoiDiem", DbType="VarChar(20)")]
		public string GiaKhoiDiem
		{
			get
			{
				return this._GiaKhoiDiem;
			}
			set
			{
				if ((this._GiaKhoiDiem != value))
				{
					this.OnGiaKhoiDiemChanging(value);
					this.SendPropertyChanging();
					this._GiaKhoiDiem = value;
					this.SendPropertyChanged("GiaKhoiDiem");
					this.OnGiaKhoiDiemChanged();
				}
			}
		}
		
		[Column(Storage="_GiaHienTai", DbType="VarChar(20)")]
		public string GiaHienTai
		{
			get
			{
				return this._GiaHienTai;
			}
			set
			{
				if ((this._GiaHienTai != value))
				{
					this.OnGiaHienTaiChanging(value);
					this.SendPropertyChanging();
					this._GiaHienTai = value;
					this.SendPropertyChanged("GiaHienTai");
					this.OnGiaHienTaiChanged();
				}
			}
		}
		
		[Column(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[Column(Storage="_NgayHetHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[Column(Storage="_MaTinhTrangSanPham", DbType="Int")]
		public System.Nullable<int> MaTinhTrangSanPham
		{
			get
			{
				return this._MaTinhTrangSanPham;
			}
			set
			{
				if ((this._MaTinhTrangSanPham != value))
				{
					if (this._TinhTrangSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSanPham = value;
					this.SendPropertyChanged("MaTinhTrangSanPham");
					this.OnMaTinhTrangSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_MoTaSanPham", DbType="NVarChar(50)")]
		public string MoTaSanPham
		{
			get
			{
				return this._MoTaSanPham;
			}
			set
			{
				if ((this._MoTaSanPham != value))
				{
					this.OnMoTaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MoTaSanPham = value;
					this.SendPropertyChanged("MoTaSanPham");
					this.OnMoTaSanPhamChanged();
				}
			}
		}
		
		[Association(Name="SanPham_ChiTietDauGia", Storage="_ChiTietDauGias", OtherKey="MaSanPham")]
		public EntitySet<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this._ChiTietDauGias;
			}
			set
			{
				this._ChiTietDauGias.Assign(value);
			}
		}
		
		[Association(Name="SanPham_Comment", Storage="_Comments", OtherKey="MaSanPham")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[Association(Name="SanPham_SanPham_Multimedia", Storage="_SanPham_Multimedias", OtherKey="MaSanPham")]
		public EntitySet<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this._SanPham_Multimedias;
			}
			set
			{
				this._SanPham_Multimedias.Assign(value);
			}
		}
		
		[Association(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="MaLoaiSanPham", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSanPham = value.MaLoaiSanPham;
					}
					else
					{
						this._MaLoaiSanPham = default(string);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[Association(Name="TaiKhoan_SanPham", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[Association(Name="TinhTrangSanPham_SanPham", Storage="_TinhTrangSanPham", ThisKey="MaTinhTrangSanPham", IsForeignKey=true)]
		public TinhTrangSanPham TinhTrangSanPham
		{
			get
			{
				return this._TinhTrangSanPham.Entity;
			}
			set
			{
				TinhTrangSanPham previousValue = this._TinhTrangSanPham.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._TinhTrangSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaTinhTrangSanPham = value.MaTinhTrangSanPham;
					}
					else
					{
						this._MaTinhTrangSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhTrangSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[Table(Name="dbo.SanPham_Multimedia")]
	public partial class SanPham_Multimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietMT;
		
		private string _MaSanPham;
		
		private System.Nullable<int> _MaMT;
		
		private EntityRef<Multimedia> _Multimedia;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietMTChanging(int value);
    partial void OnMaChiTietMTChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaMTChanging(System.Nullable<int> value);
    partial void OnMaMTChanged();
    #endregion
		
		public SanPham_Multimedia()
		{
			this._Multimedia = default(EntityRef<Multimedia>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[Column(Storage="_MaChiTietMT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaChiTietMT
		{
			get
			{
				return this._MaChiTietMT;
			}
			set
			{
				if ((this._MaChiTietMT != value))
				{
					this.OnMaChiTietMTChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietMT = value;
					this.SendPropertyChanged("MaChiTietMT");
					this.OnMaChiTietMTChanged();
				}
			}
		}
		
		[Column(Storage="_MaSanPham", DbType="VarChar(10)")]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_MaMT", DbType="Int")]
		public System.Nullable<int> MaMT
		{
			get
			{
				return this._MaMT;
			}
			set
			{
				if ((this._MaMT != value))
				{
					if (this._Multimedia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMTChanging(value);
					this.SendPropertyChanging();
					this._MaMT = value;
					this.SendPropertyChanged("MaMT");
					this.OnMaMTChanged();
				}
			}
		}
		
		[Association(Name="Multimedia_SanPham_Multimedia", Storage="_Multimedia", ThisKey="MaMT", IsForeignKey=true)]
		public Multimedia Multimedia
		{
			get
			{
				return this._Multimedia.Entity;
			}
			set
			{
				Multimedia previousValue = this._Multimedia.Entity;
				if (((previousValue != value) 
							|| (this._Multimedia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Multimedia.Entity = null;
						previousValue.SanPham_Multimedias.Remove(this);
					}
					this._Multimedia.Entity = value;
					if ((value != null))
					{
						value.SanPham_Multimedias.Add(this);
						this._MaMT = value.MaMT;
					}
					else
					{
						this._MaMT = default(Nullable<int>);
					}
					this.SendPropertyChanged("Multimedia");
				}
			}
		}
		
		[Association(Name="SanPham_SanPham_Multimedia", Storage="_SanPham", ThisKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.SanPham_Multimedias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.SanPham_Multimedias.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTaiKhoan;
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private string _MaLoaiTaiKhoan;
		
		private string _Avatar;
		
		private string _TrangThai;
		
		private System.Nullable<double> _DiemTinCayBan;
		
		private System.Nullable<double> _DiemTinCayMua;
		
		private EntitySet<ChiTietDauGia> _ChiTietDauGias;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<DauGiaThanhCong> _DauGiaThanhCongs;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntitySet<ThongTinTaiKhoan> _ThongTinTaiKhoans;
		
		private EntityRef<LoaiTaiKhoan> _LoaiTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiKhoanChanging(int value);
    partial void OnMaTaiKhoanChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaLoaiTaiKhoanChanging(string value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnDiemTinCayBanChanging(System.Nullable<double> value);
    partial void OnDiemTinCayBanChanged();
    partial void OnDiemTinCayMuaChanging(System.Nullable<double> value);
    partial void OnDiemTinCayMuaChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._ChiTietDauGias = new EntitySet<ChiTietDauGia>(new Action<ChiTietDauGia>(this.attach_ChiTietDauGias), new Action<ChiTietDauGia>(this.detach_ChiTietDauGias));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._DauGiaThanhCongs = new EntitySet<DauGiaThanhCong>(new Action<DauGiaThanhCong>(this.attach_DauGiaThanhCongs), new Action<DauGiaThanhCong>(this.detach_DauGiaThanhCongs));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._ThongTinTaiKhoans = new EntitySet<ThongTinTaiKhoan>(new Action<ThongTinTaiKhoan>(this.attach_ThongTinTaiKhoans), new Action<ThongTinTaiKhoan>(this.detach_ThongTinTaiKhoans));
			this._LoaiTaiKhoan = default(EntityRef<LoaiTaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_TenTaiKhoan", DbType="NVarChar(50)")]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiTaiKhoan", DbType="VarChar(10)")]
		public string MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					if (this._LoaiTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_Avatar", DbType="NVarChar(50)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[Column(Storage="_DiemTinCayBan", DbType="Float")]
		public System.Nullable<double> DiemTinCayBan
		{
			get
			{
				return this._DiemTinCayBan;
			}
			set
			{
				if ((this._DiemTinCayBan != value))
				{
					this.OnDiemTinCayBanChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayBan = value;
					this.SendPropertyChanged("DiemTinCayBan");
					this.OnDiemTinCayBanChanged();
				}
			}
		}
		
		[Column(Storage="_DiemTinCayMua", DbType="Float")]
		public System.Nullable<double> DiemTinCayMua
		{
			get
			{
				return this._DiemTinCayMua;
			}
			set
			{
				if ((this._DiemTinCayMua != value))
				{
					this.OnDiemTinCayMuaChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayMua = value;
					this.SendPropertyChanged("DiemTinCayMua");
					this.OnDiemTinCayMuaChanged();
				}
			}
		}
		
		[Association(Name="TaiKhoan_ChiTietDauGia", Storage="_ChiTietDauGias", OtherKey="MaTaiKhoan")]
		public EntitySet<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this._ChiTietDauGias;
			}
			set
			{
				this._ChiTietDauGias.Assign(value);
			}
		}
		
		[Association(Name="TaiKhoan_Comment", Storage="_Comments", OtherKey="MaTaiKhoan")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[Association(Name="TaiKhoan_DauGiaThanhCong", Storage="_DauGiaThanhCongs", OtherKey="MaTaiKhoan")]
		public EntitySet<DauGiaThanhCong> DauGiaThanhCongs
		{
			get
			{
				return this._DauGiaThanhCongs;
			}
			set
			{
				this._DauGiaThanhCongs.Assign(value);
			}
		}
		
		[Association(Name="TaiKhoan_SanPham", Storage="_SanPhams", OtherKey="MaTaiKhoan")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[Association(Name="TaiKhoan_ThongTinTaiKhoan", Storage="_ThongTinTaiKhoans", OtherKey="MaTaiKhoan")]
		public EntitySet<ThongTinTaiKhoan> ThongTinTaiKhoans
		{
			get
			{
				return this._ThongTinTaiKhoans;
			}
			set
			{
				this._ThongTinTaiKhoans.Assign(value);
			}
		}
		
		[Association(Name="LoaiTaiKhoan_TaiKhoan", Storage="_LoaiTaiKhoan", ThisKey="MaLoaiTaiKhoan", IsForeignKey=true)]
		public LoaiTaiKhoan LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan.Entity;
			}
			set
			{
				LoaiTaiKhoan previousValue = this._LoaiTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiKhoan.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._LoaiTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaLoaiTaiKhoan = value.MaLoaiTaiKhoan;
					}
					else
					{
						this._MaLoaiTaiKhoan = default(string);
					}
					this.SendPropertyChanged("LoaiTaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DauGiaThanhCongs(DauGiaThanhCong entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DauGiaThanhCongs(DauGiaThanhCong entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ThongTinTaiKhoans(ThongTinTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ThongTinTaiKhoans(ThongTinTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[Table(Name="dbo.THAMSO")]
	public partial class THAMSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThamSo;
		
		private string _TenThamSo;
		
		private string _GiaTri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThamSoChanging(int value);
    partial void OnIDThamSoChanged();
    partial void OnTenThamSoChanging(string value);
    partial void OnTenThamSoChanged();
    partial void OnGiaTriChanging(string value);
    partial void OnGiaTriChanged();
    #endregion
		
		public THAMSO()
		{
			OnCreated();
		}
		
		[Column(Storage="_IDThamSo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDThamSo
		{
			get
			{
				return this._IDThamSo;
			}
			set
			{
				if ((this._IDThamSo != value))
				{
					this.OnIDThamSoChanging(value);
					this.SendPropertyChanging();
					this._IDThamSo = value;
					this.SendPropertyChanged("IDThamSo");
					this.OnIDThamSoChanged();
				}
			}
		}
		
		[Column(Storage="_TenThamSo", DbType="NVarChar(50)")]
		public string TenThamSo
		{
			get
			{
				return this._TenThamSo;
			}
			set
			{
				if ((this._TenThamSo != value))
				{
					this.OnTenThamSoChanging(value);
					this.SendPropertyChanging();
					this._TenThamSo = value;
					this.SendPropertyChanged("TenThamSo");
					this.OnTenThamSoChanged();
				}
			}
		}
		
		[Column(Storage="_GiaTri", DbType="NVarChar(50)")]
		public string GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this.OnGiaTriChanging(value);
					this.SendPropertyChanging();
					this._GiaTri = value;
					this.SendPropertyChanged("GiaTri");
					this.OnGiaTriChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ThongTinTaiKhoan")]
	public partial class ThongTinTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongTinTK;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _NoiSinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _MaTheTinhDung;
		
		private string _GioiTinh;
		
		private string _Email;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongTinTKChanging(int value);
    partial void OnMaThongTinTKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnNoiSinhChanging(string value);
    partial void OnNoiSinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMaTheTinhDungChanging(string value);
    partial void OnMaTheTinhDungChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    #endregion
		
		public ThongTinTaiKhoan()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaThongTinTK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaThongTinTK
		{
			get
			{
				return this._MaThongTinTK;
			}
			set
			{
				if ((this._MaThongTinTK != value))
				{
					this.OnMaThongTinTKChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinTK = value;
					this.SendPropertyChanged("MaThongTinTK");
					this.OnMaThongTinTKChanged();
				}
			}
		}
		
		[Column(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_NoiSinh", DbType="NVarChar(50)")]
		public string NoiSinh
		{
			get
			{
				return this._NoiSinh;
			}
			set
			{
				if ((this._NoiSinh != value))
				{
					this.OnNoiSinhChanging(value);
					this.SendPropertyChanging();
					this._NoiSinh = value;
					this.SendPropertyChanged("NoiSinh");
					this.OnNoiSinhChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_MaTheTinhDung", DbType="NVarChar(50)")]
		public string MaTheTinhDung
		{
			get
			{
				return this._MaTheTinhDung;
			}
			set
			{
				if ((this._MaTheTinhDung != value))
				{
					this.OnMaTheTinhDungChanging(value);
					this.SendPropertyChanging();
					this._MaTheTinhDung = value;
					this.SendPropertyChanged("MaTheTinhDung");
					this.OnMaTheTinhDungChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Association(Name="TaiKhoan_ThongTinTaiKhoan", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ThongTinTaiKhoans.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ThongTinTaiKhoans.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TinhTrangSanPham")]
	public partial class TinhTrangSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangSanPham;
		
		private string _TenTinhTrangSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangSanPhamChanging(int value);
    partial void OnMaTinhTrangSanPhamChanged();
    partial void OnTenTinhTrangSanPhamChanging(string value);
    partial void OnTenTinhTrangSanPhamChanged();
    #endregion
		
		public TinhTrangSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrangSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTinhTrangSanPham
		{
			get
			{
				return this._MaTinhTrangSanPham;
			}
			set
			{
				if ((this._MaTinhTrangSanPham != value))
				{
					this.OnMaTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSanPham = value;
					this.SendPropertyChanged("MaTinhTrangSanPham");
					this.OnMaTinhTrangSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhTrangSanPham", DbType="NVarChar(50)")]
		public string TenTinhTrangSanPham
		{
			get
			{
				return this._TenTinhTrangSanPham;
			}
			set
			{
				if ((this._TenTinhTrangSanPham != value))
				{
					this.OnTenTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangSanPham = value;
					this.SendPropertyChanged("TenTinhTrangSanPham");
					this.OnTenTinhTrangSanPhamChanged();
				}
			}
		}
		
		[Association(Name="TinhTrangSanPham_SanPham", Storage="_SanPhams", OtherKey="MaTinhTrangSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSanPham = null;
		}
	}
}
#pragma warning restore 1591
